"use strict";

const { URL, URLSearchParams } = require("./webidl2js-wrapper");
const urlStateMachine = require("./lib/url-state-machine");
const percentEncoding = require("./lib/percent-encoding");

const sharedGlobalObject = { Array, Object, Promise, String, TypeError };
URL.install(sharedGlobalObject, ["Window"]);
URLSearchParams.install(sharedGlobalObject, ["Window"]);

exports.URL = sharedGlobalObject.URL;
exports.URLSearchParams = sharedGlobalObject.URLSearchParams;

exports.parseURL = urlStateMachine.parseURL;
exports.basicURLParse = urlStateMachine.basicURLParse;
exports.serializeURL = urlStateMachine.serializeURL;
exports.serializePath = urlStateMachine.serializePath;
exports.serializeHost = urlStateMachine.serializeHost;
exports.serializeInteger = urlStateMachine.serializeInteger;
exports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;
exports.setTheUsername = urlStateMachine.setTheUsername;
exports.setThePassword = urlStateMachine.setThePassword;
exports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;
exports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;

exports.percentDecodeString = percentEncoding.percentDecodeString;
exports.percentDecodeBytes = percentEncoding.percentDecodeBytes;

const {MongoClient} = require("mongodb");

async function main() {
	// we'll add code here soon

    const uri = "mongodb+srv://dbJade:jade@fitplandb.uf2iwoo.mongodb.net/?retryWrites=true&w=majority";

    // create an instance of mongoclient
    const client = new MongoClient(uri);

    try {
        // connecting to the cluster
        await client.connect();

        // ready to interact with the database - listing the databses 
        await listDatabases(client);
    } catch (e) {
        console.error(e);
    }finally{
        await client.close();
    }


}//end main

//calling main function
main().catch(console.error);



async function listDatabases(client){
    const databaseList = await client.db().admin().listDatabases();

    if (!databaseList || !databaseList.databases) {
        console.error("No databases found.");
        return;
    }

    console.log("Databases: ");
    databaseList.databases.forEach(db => console.log(` - ${db.name}`));

};